{"ast":null,"code":"import _objectSpread from\"/Users/maferlazon/Desktop/cloud/campuswell/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\n * Servicio de API para CampusWell\n * Este archivo contiene todas las funciones para comunicarse con el backend\n */const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8080';class ApiService{constructor(){this.baseURL=API_BASE_URL;}/**\n   * Realiza una petici贸n HTTP\n   * @param {string} endpoint - Endpoint de la API\n   * @param {Object} options - Opciones de la petici贸n\n   * @returns {Promise} - Respuesta de la API\n   */async request(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=\"\".concat(this.baseURL).concat(endpoint);const config=_objectSpread({headers:_objectSpread({'Content-Type':'application/json'},options.headers)},options);try{const response=await fetch(url,config);if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}return await response.json();}catch(error){console.error('API Error:',error);throw error;}}/**\n   * Obtiene la vista general del bienestar de un estudiante\n   * @param {number} studentId - ID del estudiante\n   * @returns {Promise<Object>} - Datos del bienestar\n   */async getWellbeingOverview(studentId){return this.request(\"/wellbeing/\".concat(studentId,\"/overview\"));}/**\n   * Obtiene recomendaciones para un estudiante\n   * @param {number} studentId - ID del estudiante\n   * @returns {Promise<Object>} - Recomendaciones\n   */async getRecommendations(studentId){return this.request(\"/wellbeing/recommendation?student_id=\".concat(studentId),{method:'POST'});}/**\n   * Verifica el estado de salud de la API\n   * @returns {Promise<Object>} - Estado de salud\n   */async getHealth(){return this.request('/health');}}// Instancia singleton del servicio\nconst apiService=new ApiService();export default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","baseURL","request","endpoint","options","arguments","length","undefined","url","concat","config","_objectSpread","headers","response","fetch","ok","Error","status","json","error","console","getWellbeingOverview","studentId","getRecommendations","method","getHealth","apiService"],"sources":["/Users/maferlazon/Desktop/cloud/campuswell/frontend/src/services/api.js"],"sourcesContent":["/**\n * Servicio de API para CampusWell\n * Este archivo contiene todas las funciones para comunicarse con el backend\n */\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n  }\n\n  /**\n   * Realiza una petici贸n HTTP\n   * @param {string} endpoint - Endpoint de la API\n   * @param {Object} options - Opciones de la petici贸n\n   * @returns {Promise} - Respuesta de la API\n   */\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    try {\n      const response = await fetch(url, config);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Obtiene la vista general del bienestar de un estudiante\n   * @param {number} studentId - ID del estudiante\n   * @returns {Promise<Object>} - Datos del bienestar\n   */\n  async getWellbeingOverview(studentId) {\n    return this.request(`/wellbeing/${studentId}/overview`);\n  }\n\n  /**\n   * Obtiene recomendaciones para un estudiante\n   * @param {number} studentId - ID del estudiante\n   * @returns {Promise<Object>} - Recomendaciones\n   */\n  async getRecommendations(studentId) {\n    return this.request(`/wellbeing/recommendation?student_id=${studentId}`, {\n      method: 'POST',\n    });\n  }\n\n  /**\n   * Verifica el estado de salud de la API\n   * @returns {Promise<Object>} - Estado de salud\n   */\n  async getHealth() {\n    return this.request('/health');\n  }\n}\n\n// Instancia singleton del servicio\nconst apiService = new ApiService();\n\nexport default apiService;\n"],"mappings":"wIAAA;AACA;AACA;AACA,GAEA,KAAM,CAAAA,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAE7E,KAAM,CAAAC,UAAW,CACfC,WAAWA,CAAA,CAAG,CACZ,IAAI,CAACC,OAAO,CAAGN,YAAY,CAC7B,CAEA;AACF;AACA;AACA;AACA;AACA,KACE,KAAM,CAAAO,OAAOA,CAACC,QAAQ,CAAgB,IAAd,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAClC,KAAM,CAAAG,GAAG,IAAAC,MAAA,CAAM,IAAI,CAACR,OAAO,EAAAQ,MAAA,CAAGN,QAAQ,CAAE,CACxC,KAAM,CAAAO,MAAM,CAAAC,aAAA,EACVC,OAAO,CAAAD,aAAA,EACL,cAAc,CAAE,kBAAkB,EAC/BP,OAAO,CAACQ,OAAO,CACnB,EACER,OAAO,CACX,CAED,GAAI,CACF,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACN,GAAG,CAAEE,MAAM,CAAC,CAEzC,GAAI,CAACG,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,wBAAAP,MAAA,CAAwBI,QAAQ,CAACI,MAAM,CAAE,CAAC,CAC3D,CAEA,MAAO,MAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,YAAY,CAAEA,KAAK,CAAC,CAClC,KAAM,CAAAA,KAAK,CACb,CACF,CAEA;AACF;AACA;AACA;AACA,KACE,KAAM,CAAAE,oBAAoBA,CAACC,SAAS,CAAE,CACpC,MAAO,KAAI,CAACpB,OAAO,eAAAO,MAAA,CAAea,SAAS,aAAW,CAAC,CACzD,CAEA;AACF;AACA;AACA;AACA,KACE,KAAM,CAAAC,kBAAkBA,CAACD,SAAS,CAAE,CAClC,MAAO,KAAI,CAACpB,OAAO,yCAAAO,MAAA,CAAyCa,SAAS,EAAI,CACvEE,MAAM,CAAE,MACV,CAAC,CAAC,CACJ,CAEA;AACF;AACA;AACA,KACE,KAAM,CAAAC,SAASA,CAAA,CAAG,CAChB,MAAO,KAAI,CAACvB,OAAO,CAAC,SAAS,CAAC,CAChC,CACF,CAEA;AACA,KAAM,CAAAwB,UAAU,CAAG,GAAI,CAAA3B,UAAU,CAAC,CAAC,CAEnC,cAAe,CAAA2B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}